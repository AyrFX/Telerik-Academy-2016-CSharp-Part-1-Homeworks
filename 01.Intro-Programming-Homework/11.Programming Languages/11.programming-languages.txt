C# in comparison with the most popular programming languages

1. C
C is a general-purpose, imperative computer programming language. It supports structured programming, lexical variable scope and
recursion, while a static type system prevents many unintended operations. By design, C provides constructs that map efficiently
to typical machine instructions, and therefore it has found lasting use in applications that had formerly been coded in assembly
language, including operating systems as well as various application software for computers ranging from supercomputers to embedded
systems.
C is similar C# because of imperative and procedural paradigms support.
C differs C# because of missing support of object-oriented, functional, generic, reflective, eventdriven, structired and concurent
paradigms support.
	
2. Java
Java is a functional computer programming language that is concurrent, class-based, object-oriented and specifically designed to
have as few implementation dependencies as possible. It is intended to let application developers "write once, run anywhere" (WORA),
meaning that code that runs on one platform does not need to be recompiled to run on another.Java applications are typically compiled
to bytecode that can run on any Java virtual machine (JVM) regardless of computer architecture. The language derives much of its syntax
from C and C++, but it has fewer low-level facilities than either of them.
Java is similar C# because of imperative, object-oriented, generic and reflective paradigms support.
Java differs C# because of missing support of functional, procedural, eventdriven and structired paradigms support.

3. PHP
PHP is a server-side scripting language designed for web development but also used as a general-purpose programming language. PHP code
can be simply mixed with HTML code, or it can be used in combination with various templating engines and web frameworks. PHP code is
usually processed by a PHP interpreter, which is usually implemented as a web server's native module or a Common Gateway Interface (CGI)
executable. PHP is a general-purpose scripting language that is especially suited to server-side web development, in which case PHP
generally runs on a web server. Any PHP code in a requested file is executed by the PHP runtime, usually to create dynamic web page
content or dynamic images used on websites or elsewhere.[122] It can also be used for command-line scripting and client-side graphical
user interface (GUI) applications. PHP can be deployed on most web servers, many operating systems and platforms, and can be used with
many relational database management systems (RDBMS). Most web hosting providers support PHP for use by their clients.
PHP is similar C# because of imperative, object-oriented, procedural and reflective paradigms support.
PHP differs C# because of missing support of functional, generic, eventdriven, structired and concurent paradigms support.

4. JavaScript
JavaScript is a dynamic computer programming language. JavaScript is classified as a prototype-based scripting language with dynamic
typing and first-class functions. This mix of features makes it a multi-paradigm language, supporting object-oriented, imperative, and
functional programming styles.
It is most commonly used as part of web browsers, whose implementations allow client-side scripts to interact with the user, control
the browser, communicate asynchronously, and alter the document content that is displayed. It is also used in server-side network
programming with runtime environments such as Node.js, game development and the creation of desktop and mobile applications.
JavaScript is similar C# because of imperative, object-oriented, functional and reflective paradigms support.
JavaScript differs C# because of missing support of procedural, generic, eventdriven, structired and concurent paradigms support. Unlike
C# JavaScript supports prototype-based paradigm.

5. C++
C++ is a general-purpose programming language. It has imperative, object-oriented and generic programming features, while also providing
the facilities for low-level memory manipulation. It is designed with a bias toward system programming (e.g., for use in embedded systems
or operating system kernels), with performance, efficiency and flexibility of use as its design requirements. C++ has also been found
useful in many other contexts, including desktop applications, servers (e.g. e-commerce, web search or SQL servers), performance-critical
applications (e.g. telephone switches or space probes), and entertainment software. C++ is a compiled language, with implementations of
it available on many platforms.
C++ is similar C# because of imperative, object-oriented, functional, procedural and generic paradigms support.
C++ differs C# because of missing support of reflective, eventdriven, structired and concurent paradigms support.

Sources:
1. http://langpop.com/
2. http://en.wikipedia.org/wiki/
3. http://en.wikipedia.org/wiki/Comparison_of_programming_languages